#配置服务器是以热加载的方式加载仓库文件内容，在仓库／本地修改文件后会反应的配置服务上，但客户端不会同步更新；
#客户端启动后会把文件内容缓存起来，仓库文件修改只会同步反应到配置服务上，不会反应到客户端上；需要使用refresh等方式实现

spring.application.name=configServer
server.port=5501
# git管理配置
#spring.cloud.config.server.git.uri=git@github.com:Torres999/config-server.git
#spring.cloud.config.server.git.searchPaths=config-repo
#spring.cloud.config.server.git.username=Torres999
#spring.cloud.config.server.git.password=密码
#spring.cloud.config.server.git.uri：配置git仓库位置
#spring.cloud.config.server.git.searchPaths：配置仓库路径下的相对搜索位置，可以配置多个
#spring.cloud.config.server.git.username：访问git仓库的用户名
#spring.cloud.config.server.git.password：访问git仓库的用户密码

spring.profiles.active=native
spring.cloud.config.server.native.searchLocations=file:/Users/lilinlin/IdeaProjects/config-server/config-repo


#URL与配置文件的映射关系如下：
#/{application}/{profile}[/{label}]
#/{application}-{profile}.yml
#/{label}/{application}-{profile}.yml
#/{application}-{profile}.properties
#/{label}/{application}-{profile}.properties

#面的url会映射{application}-{profile}.properties对应的配置文件，{label}对应git上不同的分支，默认为master。


#请求地址：http://localhost:5501/configServer/dev/brch



