server.port=5551

#寻找configServerCluster-dev.properties文件
#git仓库／本地路径下的文件名字{application}部分一定要和这个相同，否则取不到文件
spring.application.name=configServerCluster
#spring.cloud.config.name=configServerCluster和spring.application.name效果一样

spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=configCluster-Server
spring.cloud.config.profile=test
#spring.cloud.config.discovery.enabled:开启通过服务来访问Config Server的功能
#spring.cloud.config.discovery.serviceId:指定Config Server注册的服务名
#spring.application.name和spring.cloud.config.profile如之前通过URI的方式访问时候一样，用来定位Git中的资源。

eureka.client.serviceUrl.defaultZone=http://localhost:8801/eureka/

##请求地址：http://localhost:5551/from

#刷新消费端配置内容：
#1.添加pom依赖spring-boot-starter-actuator
#2.刷新服务：http://localhost:5551/refresh   //actuator默认的refresh方法（POST类型）
#3.重新请求获得最新地址